@model TeamAdmin.Web.Models.TeamDetailsModel
@using System.Globalization;
@using TeamAdmin.Lib.Util;
@{
    var team = Model.Team;
    var events = Model.Events;
}
<div class="container">
    <h1>@team.Name @(string.IsNullOrWhiteSpace(team.DisplayName) ? "" : "- " + team.DisplayName)</h1>

    @if (team != null && team.Media != null && team.Media.Count() > 0)
    {
        <div class="row">
            <img style="max-height:400px" src="@team.Media.FirstOrDefault().Url?w=600&mode=max" srcset="@team.Media.FirstOrDefault().Url?w=1200&mode=max 1200w, @team.Media.FirstOrDefault().Url?w=800&mode=max 800w, @team.Media.FirstOrDefault().Url?w=600&mode=max 600w, @team.Media.FirstOrDefault().Url?w=400&mode=max 400w" alt="@team.Name" class="img-responsive center-block" />
        </div>
    }

    @if (Model != null && events != null && events.Count() > 0)
    {
        <h2>Upcoming Events</h2>
        <div class="row">
            @foreach (var evnt in events)
            {
                @foreach (var ev in evnt)
                {
                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                        <div class="media">
                            <div class="media-body">
                                <a href="/events/@ev.EventId">
                                    @if (ev.EventType == TeamAdmin.Core.EventType.GAME || ev.EventType == TeamAdmin.Core.EventType.EXHIBITION_GAME)
                                    {
                                        <div class="fixture">
                                            <div class="fixture-full-date"> @ev.StartDate.ToString("ddd dd MMM")  <span class="glyphicon glyphicon-time"></span>  @ev.StartDate.ToString("h:mmtt") - @ev.EndDate.ToString("h:mmtt")</div>
                                            <div class="fixture-title">
                                                <figure style="display:inline-block;vertical-align: top; margin-right:10px;"><figcaption style="padding-right:5px;display: block;float: left;max-width:80px;text-align:right;">@(ev.Away.HasValue && ev.Away.Value ? ev.Opponent.Name : ev.Teams.FirstOrDefault().DisplayName)</figcaption><img src="@(ev.Away.HasValue && ev.Away.Value ? (string.IsNullOrWhiteSpace(ev.Opponent.LogoUrl) ? Settings.ImageUrlRoot + "/no_image.jpeg" : ev.Opponent.LogoUrl) : Settings.ImageUrlRoot + "/mapola-logo.png")?w=40&h=40"></figure>
                                                <span style="margin:auto;">vs</span>
                                                <figure style="display:inline-block;margin-left:10px;"><figcaption style="padding-left:5px;display: block;float:right;max-width:80px;text-align:left;">@(ev.Away.HasValue && ev.Away.Value ? ev.Teams.FirstOrDefault().DisplayName : ev.Opponent.Name)</figcaption><img src="@(ev.Away.HasValue && ev.Away.Value ? @Settings.ImageUrlRoot + "/mapola-logo.png" : (string.IsNullOrWhiteSpace(ev.Opponent.LogoUrl) ? @Settings.ImageUrlRoot + "/no_image.jpeg" : ev.Opponent.LogoUrl))?w=40&h=40"></figure>
                                            </div>
                                            <div class="fixture-address">@ev.Address</div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="fixture">
                                            <div class="fixture-full-date"> @ev.StartDate.ToString("ddd dd MMM")  <span class="glyphicon glyphicon-time"></span>  @ev.StartDate.ToString("h:mmtt") - @ev.EndDate.ToString("h:mmtt")</div>
                                            <div class="fixture-title">
                                                @foreach (var t in @ev.Teams)
                                                {
                                                    <span>@t.DisplayName</span>
                                                }
                                                <div>@ev.Title</div>
                                            </div>
                                            <div class="fixture-address">@ev.Address</div>
                                        </div>
                                    }
                                </a>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    }

    @if (Model != null && Model.Players != null && Model.Players.Count() > 0)
    {
        <h2>Players</h2>
        <div class="row">
            @foreach (var player in Model.Players)
                {
                <div class="col-xs-12 col-sm-4 col-md-3">
                    <div class="media">
                        <div class="media-left">
                            @if (!string.IsNullOrWhiteSpace(player.PhotoUrl))
                            {
                                <img class="media-object img-rounded" src="@player.PhotoUrl?w=80&h=80" alt="@player.FirstName">
                            }
                            else
                            {
                                <img class="media-object img-rounded" src="@($"{Settings.ImageUrlRoot}/no_image.jpeg")?w=80&h=80" alt="@player.FirstName">
                            }

                        </div>
                        <div class="media-body">
                            <h4 class="media-heading">@player.FirstName @player.LastName.FirstOrDefault()</h4>
                            <div>@player.Position</div>
                            @if (player.SquadNumber.HasValue)
                            {
                                <div>#@player.SquadNumber</div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <a href="/teams" class="right">Go to teams list</a>
</div>